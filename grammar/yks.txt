

compute yks {
   tyt::turkce::dogru       << 35.
   tyt::turkce::yanlis      << 3.
   tyt::matematik::dogru    << 31.
   tyt::matematik::yanlis   << 1.
   tyt::sosyal::dogru       << 150.
   tyt::sosyal::yanlis      << 3.
   tyt::fen::dogru          << 19.
   tyt::fen::yanlis         << 0.
   diploma_notu             << 123.
}.

entity yks {
    title: "YÜKSEKÖĞRETİM KURUMLARI SINAVI".
    abbreviation: "YKS".

    constraints test_20_constraint_set  {
        dogru >= 0 && dogru <= 20, "Doğru sayısı en az 0 en çok 20 olabilir".
        yanlis >= 0 && yanlis <= 20, "Yanlış sayısı en az 0 en çok 20 olabilir".
        dogru + yanlis <= 20, "Doğru ve yanlış sayısının toplamı en fazla 20 olabilir".
    }.

    constraints test_40_constraint_set {
        dogru >= 0 && dogru <= 40, "Doğru sayısı en az 0 en çok 40 olabilir".
        yanlis >= 0 && yanlis <= 40, "Yanlış sayısı en az 0 en çok 40 olabilir".
        dogru + yanlis <= 40, "Doğru ve yanlış sayısının toplamı en fazla 40 olabilir".
    }.

    constraints test_80_constraint_set  {
        dogru >= 0 && dogru <= 80, "Doğru sayısı en az 0 en çok 80 olabilir".
        yanlis >= 0 && yanlis <= 80, "Yanlış sayısı en az 0 en çok 80 olabilir".
        dogru + yanlis <= 80, "Doğru ve yanlış sayısının toplamı en fazla 80 olabilir".
    }.


    in diploma_notu.
    in daha_once_yerlesti.

    ek_puan := (diploma_notu * 5.0) * (daha_once_yerlesti ? 0.06 : 0.12) given {
        diploma_notu >= 50.0 && diploma_notu <= 100, "Diploma notu 50 ile 100 arasında olmalı!".
    }.

    entity tyt {
        title: "TEMEL YETERLİLİK SINAVI".
        abbreviation: "TYT".

        entity turkce {
            in dogru.
            in yanlis.

            out net := dogru - yanlis * 0.25 given test_40_constraint_set.
        }

        entity matematik {
            in dogru.
            in yanlis.

            out net := dogru - yanlis * 0.25 given test_40_constraint_set.
        }

        entity fen {
            in dogru.
            in yanlis.

            out net :=  dogru - yanlis * 0.25 given test_20_constraint_set.
        }

        entity sosyal {
            in dogru.
            in yanlis.

            out net := dogru - yanlis * 0.25 given test_20_constraint_set.
        }

        out net := turkce::net + matematik::net + sosyal::net + fen::net
            given {
                turkce::net >= 0.5 && matematik::net >= 0.5.
            }.
    }

    entity ayt {
        title: "ALAN YETERLİLİK TESTİ".
        abbreviation: "AYT".

        entity edsos1 {
            title: "EDEBİYAT-SOSYAL BİLİMLER 1".

            in dogru.
            in yanlis.

            out net := dogru - yanlis * 0.25 given test_40_constraint_set.

        }

        entity sosyal2 {
            title: "SOSYAL BİLİMLER 2".

            in dogru.
            in yanlis.

            out  net := dogru - yanlis * 0.25 given test_40_constraint_set.
        }

        entity matematik {
            title: "MATEMATİK".

            in dogru.
            in yanlis.

            out  net := dogru - yanlis * 0.25  given test_40_constraint_set.
        }

        entity fen {
            title: "FEN BİLİMLERİ".

            in dogru.
            in yanlis.

            out  net := dogru - yanlis * 0.25  given test_40_constraint_set.
        }

    }

    entity ydt {
        title: "YABANCI DİL TESTİ".
        abbreviation: "YDT".

        entity yabanci_dil {
            title: "YABANCI DİL".

            in dogru.
            in yanlis.

            out net := dogru - yanlis * 0.25  given test_80_constraint_set.
        }
    }

    out say_net := ayt::matematik::net + ayt::fen::net      given { ayt::matematik::net >= 0.5 && ayt::fen::net     >= 0.5. }.
    out ea_net  := ayt::matematik::net + ayt::edsos1::net   given { ayt::matematik::net >= 0.5 && ayt::edsos1::net  >= 0.5. }.
    out soz_net := ayt::edsos1::net    + ayt::sosyal2::net  given { ayt::edsos1::net    >= 0.5 && ayt::sosyal2::net >= 0.5. }.
    out dil_net := ydt::yabanci_dil::net                    given { ydt::yabanci_dil::net >= 0.5. }.

    out tyt_ham := 100.0 + (tyt::net * 400.0 / 120.0).
    out say_ham := ((tyt_ham - 100.0) * 0.4 + (say_net * 5.0) * 0.6) + 100.0.
    out ea_ham  := ((tyt_ham - 100.0) * 0.4 + (ea_net * 5.0) * 0.6) + 100.0.
    out soz_ham := ((tyt_ham - 100.0) * 0.4 + (soz_net * 5.0) * 0.6) + 100.0.
    out dil_ham := ((tyt_ham - 100.0) * 0.4 + (dil_net * 5.0) * 0.6) + 100.0.

    out tyt_yerlestirme := tyt_ham + ek_puan.
    out say_yerlestirme := say_ham + ek_puan.
    out ea_yerlestirme := ea_ham + ek_puan.
    out soz_yerlestirme := soz_ham + ek_puan.
    out dil_yerlestirme := dil_ham + ek_puan.
}